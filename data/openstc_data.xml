<?xml version="1.0" encoding="utf-8"?>
<!--
    OpenSTC Interventions - Openerp Module to manage Cityhall technical department
    Copyright (C) 2013 Siclic www.siclic.fr

    This file is part of OpenSTC Interventions.

    OpenSTC Interventions is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    OpenSTC Interventions is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with OpenSTC Interventions.  If not, see <http://www.gnu.org/licenses/>.
-->
<openerp>
	<data noupdate="0">
	     	<!-- mail template about has been created -->
		    <record id="openstc_email_template_ask_wait" model="email.template">
		        <field name="name">Demande d'intervention Enregistrée</field>
		        <field name="model_id" ref="model_openstc_ask"/>
		    	<field name="email_from">pierreyves.fadet@siclic.fr</field>
				<field name="email_to">pierreyves.fadet@siclic.fr</field>
				<field name="subject">Votre demande d'intervention est enregistrée : ${object.name or 'inconnu'} </field>
				<!-- BODY HTML -->
				<field name="body_html"><![CDATA[
					<h2>Madame, Monsieur,</h2>

					<p>Nous vous confirmons que la demande d'intervention suivante a été enregistrée </p>

					<p>${ object.name } : <br />
					${ object.description } </p><br />

					<p>Vous recevrez prochainement un autre à email pour vous informer de la validation ou du refus de votre demande.</p> <br/>

					<p>Bien cordialement</p>

				    <p>${object.create_uid.signature or ''}<br />
				    ${object.partner_id.company_id.name or object.create_uid.company_id.name or ''} </p>

				]]></field>
				<!-- BODY TEXT -->
				<field name="body_text"><![CDATA[
					Madame, Monsieur,

					Nous vous confirmons que la demande d'intervention suivante a été enregistrée

					${ object.name } :
					${ object.description }

					Vous recevrez prochainement un autre à email pour vous informer de la validation ou du refus de votre demande.

					Bien cordialement

				    ${object.create_uid.signature or ''}
				    ${object.create_uid.company_id.name or ''}
		    ]]></field>
	    </record>
		<!-- mail template about has been validated -->
		<record id="openstc_email_template_ask_valid" model="email.template">
		        <field name="name">Demande d'intervention Validée</field>
		        <field name="model_id" ref="model_openstc_ask"/>
		    	<field name="email_from">pierreyves.fadet@siclic.fr</field>
				<field name="email_to">pierreyves.fadet@siclic.fr</field>
				<field name="subject">Votre demande d'intervention est validée: ${object.name or 'inconnu'}</field>
				<!-- BODY HTML -->
				<field name="body_html"><![CDATA[
					<h2>Madame, Monsieur,</h2>

					<p>Nous vous confirmons que la demande d'intervention suivante a été validée </p>

					<%
					from datetime import datetime
					import pytz
					%>

					<p>${ object.name } : </p>
					<p>${ object.description } </p>

					<%
					date_deadline_str = ""
					date_deadline = datetime.strptime(str(object.date_deadline),"%Y-%m-%d").replace(tzinfo=pytz.utc)
					date_deadline_str = date_deadline.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x").encode('utf-8'))

					%>

					<p>Date butoir :  ${date_deadline_str}</p>

					<p>Vous recevrez prochainement un autre email pour vous informer de la planification ou de la clôture de votre demande</p>

					<p>Bien cordialement</p>

				    <p>${object.write_uid.signature or ''}<br />
				    ${object.partner_id.company_id.name or ''} </p>

				]]></field>
				<!-- BODY TEXT -->
				<field name="body_text"><![CDATA[
					Madame, Monsieur,

					Nous vous confirmons que la demande d'intervention suivante a été validée

					<%
					from datetime import datetime
					import pytz
					%>

					${ object.name } :
					${ object.description }

					<%
					date_deadline_str= ""
					date_deadline = datetime.strptime(str(object.date_deadline),"%Y-%m-%d").replace(tzinfo=pytz.utc)
					date_deadline_str = date_deadline.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x").encode('utf-8'))

					%>

					Date butoir :  ${date_deadline_str}

					Vous recevrez prochainement un autre email pour vous informer de la planification ou de la clôture de votre demande

					Bien cordialement

				    ${object.write_uid.signature or ''}
				    ${object.partner_id.company_id.name or ''}

		    ]]></field>
	    </record>
	   	<!-- mail template about has been cancelled -->
		<record id="openstc_email_template_ask_cancelled" model="email.template">
		        <field name="name">Demande d'intervention Refusée</field>
		        <field name="model_id" ref="model_openstc_ask"/>
		    	<field name="email_from">pierreyves.fadet@siclic.fr</field>
				<field name="email_to">pierreyves.fadet@siclic.fr</field>
				<field name="subject">Votre demande d'intervention est refusée : ${object.name or 'inconnu'}</field>
				<!-- BODY HTML -->
				<field name="body_html"><![CDATA[
					<h2>Madame, Monsieur,</h2>

					<p>Nous ne pouvons donner une suite favorable à votre demande d'intervention <b>${object.name or 'inconnu'}</b> </p>

					<p>La raison de ce refus : </br>
					${object.refusal_reason or u'Contactez la Mairie pour plus détail'}
					</p>

					<p>Bien cordialement</p>

				    <p>${object.write_uid.signature or ''}<br />
				    ${object.partner_id.company_id.name or ''} </p>

				]]></field>
				<!-- BODY TEXT -->
				<field name="body_text"><![CDATA[
					Madame, Monsieur,

					Nous ne pouvons donner une suite favorable à votre demande d'intervention ${object.name or 'inconnu'}

					La raison de ce refus :
					${object.refusal_reason or u'Contactez la Mairie pour plus détail'}

					Bien cordialement

				    ${object.write_uid.signature or ''}
				    ${object.partner_id.company_id.name or ''}
		    ]]></field>
	    </record>
		<!-- mail template about has been finished -->
		<record id="openstc_email_template_ask_finished" model="email.template">
		        <field name="name">Demande d'intervention terminée</field>
		        <field name="model_id" ref="model_openstc_ask"/>
		    	<field name="email_from">pierreyves.fadet@siclic.fr</field>
				<field name="email_to">pierreyves.fadet@siclic.fr</field>
				<field name="subject">Votre demande d'intervention  est terminée : ${object.name or 'inconnu'}</field>
				<!-- BODY HTML -->
				<field name="body_html"><![CDATA[
				<h2>Madame, Monsieur,</h2>

					<%
					from datetime import datetime
					import pytz

					my_first_checkin = None
					my_last_checkout = None
					my_first_checkin_str = ""
					my_last_checkout_str = ""
					%>

					% for inter in object.intervention_ids:
						% for task in inter.tasks:
						<%
							my_checkin = datetime.strptime(str(task.date_start),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
							my_checkout = datetime.strptime(str(task.date_end),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
							if my_first_checkin == None:
								my_first_checkin = my_checkin
							if my_checkin < my_first_checkin:
								my_first_checkin = my_checkin


							if my_last_checkout == None:
								my_last_checkout = my_checkout
							if my_checkout > my_last_checkout:
								my_last_checkout = my_checkout


							my_checkin_str = my_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_first_checkin_str = my_first_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_checkout_str = my_checkout.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_last_checkout_str = my_last_checkout.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))

							my_checkin_str = my_checkin_str.decode('utf-8')
							my_first_checkin_str = my_first_checkin_str.decode('utf-8')
							my_checkout_str = my_checkout_str.decode('utf-8')
							my_last_checkout_str = my_last_checkout_str.decode('utf-8')
						%>
						% endfor
					% endfor

					<p>L'intervention <b>${object.name}</b> s'est déroulée à partir du ${my_first_checkin_str} et s'est terminée le ${my_last_checkout_str}.<br>
					Cette intervention est terminée.</p>

					<p>Bien cordialement</p>

				   <br />
				   <p>${object.write_uid.signature or ''} <br />
				   ${object.partner_id.company_id.name or ''} </p>

				]]></field>

				<!-- BODY TEXT -->
				<field name="body_text"><![CDATA[
					Madame, Monsieur,

					<%
					from datetime import datetime
					import pytz

					my_first_checkin = None
					my_last_checkout = None
					my_first_checkin_str = ""
					my_last_checkout_str = ""

					%>

					% for inter in object.intervention_ids:
						%for task in inter.tasks:
						<%
							my_checkin = datetime.strptime(str(task.date_start),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
							my_checkout = datetime.strptime(str(task.date_end),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
							if my_first_checkin == None:
								my_first_checkin = my_checkin
							if my_checkin < my_first_checkin:
								my_first_checkin = my_checkin


							if my_last_checkout == None:
								my_last_checkout = my_checkout
							if my_checkout > my_last_checkout:
								my_last_checkout = my_checkout


							my_checkin_str = my_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_first_checkin_str = my_first_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_checkout_str = my_checkout.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
							my_last_checkout_str = my_last_checkout.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))

							my_checkin_str = my_checkin_str.decode('utf-8')
							my_first_checkin_str = my_first_checkin_str.decode('utf-8')
							my_checkout_str = my_checkout_str.decode('utf-8')
							my_last_checkout_str = my_last_checkout_str.decode('utf-8')
						%>
						% endfor
					% endfor

					Suite à la demande d'intervention ${object.name} s'est déroulée à partir du ${my_first_checkin_str} et s'est terminée le ${my_last_checkout_str}.
					Cette intervention est terminée.

					Bien cordialement

				   ${object.write_uid.signature or ''}


			    ]]></field>
	    </record>


		<!-- mail template about has been created -->
		<record id="openstc_email_template_project_scheduled" model="email.template">
		        <field name="name">Intervention planifiée</field>
		        <field name="model_id" ref="model_project_project"/>
		    	<field name="email_from">pierreyves.fadet@siclic.fr</field>
				<field name="email_to">pierreyves.fadet@siclic.fr</field>
				<field name="subject">Votre demande d'intervention  est planifiée : ${object.name or 'inconnu'}</field>
				<!-- BODY HTML -->
				<field name="body_html"><![CDATA[
					<h2>Madame, Monsieur,</h2>

					<%
					from datetime import datetime
					import pytz

					my_first_checkin = None
					my_first_checkin_str = ""
					%>


					%for task in object.tasks:
					<%
						my_checkin = datetime.strptime(str(task.date_start),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
						if my_first_checkin == None:
							my_first_checkin = my_checkin
						if my_checkin < my_first_checkin:
							my_first_checkin = my_checkin

						my_checkin_str = my_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
						my_first_checkin_str = my_first_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))

						my_checkin_str = my_checkin_str.decode('utf-8')
						my_first_checkin_str = my_first_checkin_str.decode('utf-8')

					%>
					% endfor


					<p>Nous vous confirmons que la demande d'intervention ${ object.name } a été planifiée à partir du  ${my_first_checkin_str} . </p>

					<p>Vous recevrez prochainement un autre email pour vous informer de l'évolution de cette demande. </p>

					<p>Bien cordialement</p>

				    <p>${ object.ask_id.partner_id.company_id.name or '' } </p>

				]]></field>
				<!-- BODY TEXT -->
				<field name="body_text"><![CDATA[
					Madame, Monsieur,

					<%
					from datetime import datetime
					import pytz

					my_first_checkin = None
					my_first_checkin_str = ""
					%>


					%for task in object.tasks:
					<%
						my_checkin = datetime.strptime(str(task.date_start),"%Y-%m-%d %H:%M:%S").replace(tzinfo=pytz.utc)
						if my_first_checkin == None:
							my_first_checkin = my_checkin
						if my_checkin < my_first_checkin:
							my_first_checkin = my_checkin

						my_checkin_str = my_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))
						my_first_checkin_str = my_first_checkin.astimezone(pytz.timezone("Europe/Paris")).strftime(("%x %Hh%M").encode('utf-8'))

						my_checkin_str = my_checkin_str.decode('utf-8')
						my_first_checkin_str = my_first_checkin_str.decode('utf-8')

					%>
					% endfor

					Nous vous confirmons que la demande d'intervention ${ object.name } a été planifiée le ${my_first_checkin_str}.

					Vous recevrez prochainement un autre email pour vous informer de l'évolution de cette demande.

					Bien cordialement

				    ${ object.ask_id.partner_id.company_id.name or '' }
		    ]]></field>
	    </record>
	</data>
</openerp>